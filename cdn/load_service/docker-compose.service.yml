name: s3-load-service
services:
    minio:
      image: minio/minio:latest
      container_name: minio
      command: server --console-address ":9001" /data/
      ports:
        - "9000:9000"
        - "9001:9001"
      environment:
        MINIO_ROOT_USER: ${S3LS_ACCESS_KEY}
        MINIO_ROOT_PASSWORD: ${S3LS_SECRET_KEY}
      volumes:
        - minio-storage:/data

      healthcheck:
        test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
        interval: 30s
        timeout: 20s
        retries: 3

    web:
      build:
        dockerfile: ./docker/Dockerfile
        target: development
      container_name: api
      ports:
        - "8000:8000"
      command: uvicorn main:app --host 0.0.0.0 --reload
      env_file:
        - .env.s3ls

      #volumes:
      #  - ./src:/opt/app
      depends_on:
        - redis

    celery-worker:
      build:
        dockerfile: ./docker/Dockerfile
        target: development
      container_name: celery_worker
      command: celery -A workers.worker.celery worker --loglevel=info
      env_file:
        - .env.s3ls
      volumes:
        - ./src:/opt/app
      depends_on:
        - redis

    celery-beat:
      build:
        dockerfile: ./docker/Dockerfile
        target: development
      container_name: celery_beat
      command: celery -A workers.worker.celery beat --loglevel=debug
      volumes:
        - ./src:/opt/app
      env_file:
        - .env.s3ls
      depends_on:
        - redis

    dashboard:
        build:
          dockerfile: ./docker/Dockerfile
          target: development
        container_name: dashboard
        command: celery --broker=redis://redis:6379/0 flower
        ports:
          - "5555:5555"
        depends_on:
          - redis
          - celery-worker

    redis:
      image: redis:7.0.10-alpine
      container_name: redis
      ports:
        - "6379:6379"

volumes:
  minio-storage:

networks:
  default:
    name: s3-network